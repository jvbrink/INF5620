\documentclass[a4paper, 11pt, notitlepage, english]{article}

\usepackage{babel}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc, url}
\usepackage{textcomp}
\usepackage{amsmath, amssymb}
\usepackage{amsbsy, amsfonts}
\usepackage{graphicx, color}
\usepackage{parskip}
\usepackage{framed}
\usepackage{amsmath}
\usepackage{xcolor}
\usepackage{multicol}
\usepackage{url}
\usepackage{flafter}


\usepackage{geometry}
\geometry{headheight=0.01mm}
\geometry{top=24mm, bottom=29mm, left=39mm, right=39mm}

\renewcommand{\arraystretch}{2}
\setlength{\tabcolsep}{10pt}
\makeatletter
\renewcommand*\env@matrix[1][*\c@MaxMatrixCols c]{%
  \hskip -\arraycolsep
  \let\@ifnextchar\new@ifnextchar
  \array{#1}}
%
% Parametere for inkludering av kode fra fil
%
\usepackage{listings}
\lstset{language=python}
\lstset{basicstyle=\ttfamily\small}
\lstset{frame=single}
\lstset{keywordstyle=\color{red}\bfseries}
\lstset{commentstyle=\itshape\color{blue}}
\lstset{showspaces=false}
\lstset{showstringspaces=false}
\lstset{showtabs=false}
\lstset{breaklines}

%
% Definering av egne kommandoer og miljøer
%
\newcommand{\dd}[1]{\ \text{d}#1}
\newcommand{\f}[2]{\frac{#1}{#2}} 
\newcommand{\beq}{\begin{equation*}}
\newcommand{\eeq}{\end{equation*}}
\newcommand{\bra}[1]{\langle #1|}
\newcommand{\ket}[1]{|#1 \rangle}
\newcommand{\braket}[2]{\langle #1 | #2 \rangle}
\newcommand{\braup}[1]{\langle #1 \left|\uparrow\rangle\right.}
\newcommand{\bradown}[1]{\langle #1 \left|\downarrow\rangle\right.}
\newcommand{\av}[1]{\left| #1 \right|}
\newcommand{\op}[1]{\hat{#1}}
\newcommand{\braopket}[3]{\langle #1 | {#2} | #3 \rangle}
\newcommand{\ketbra}[2]{\ket{#1}\bra{#2}}
\newcommand{\pp}[1]{\frac{\partial}{\partial #1}}
\newcommand{\ppn}[1]{\frac{\partial^2}{\partial #1^2}}
\newcommand{\up}{\left|\uparrow\rangle\right.}
\newcommand{\upup}{\left|\uparrow\uparrow\rangle\right.}
\newcommand{\down}{\left|\downarrow\rangle\right.}
\newcommand{\downdown}{\left|\downarrow\downarrow\rangle\right.}
\newcommand{\updown}{\left|\uparrow\downarrow\rangle\right.}
\newcommand{\downup}{\left|\downarrow\uparrow\rangle\right.}
\newcommand{\bupup}{\left.\langle\uparrow\uparrow\right|}
\newcommand{\bdowndown}{\left.\langle\downarrow\downarrow\right|}
\newcommand{\bupdown}{\left.\langle\uparrow\downarrow\right|}
\newcommand{\bdownup}{\left.\langle\downarrow\uparrow\right|}
\renewcommand{\d}{{\rm d}}
\newcommand{\Res}[2]{{\rm Res}(#1;#2)}
\newcommand{\To}{\quad\Rightarrow\quad}
\newcommand{\eps}{\epsilon}



\newcommand{\bt}[1]{\boldsymbol{#1}}
\newcommand{\mat}[1]{\textsf{\textbf{#1}}}
\newcommand{\I}{\boldsymbol{\mathcal{I}}}
\newcommand{\p}{\partial}
\newcommand{\D}{\mbox{D}}
%
% Navn og tittel
%
\author{Emilie Fjørner \\[-0.4cm] \texttt{e.s.fjorner@fys.uio.no} \\[0.2cm] Jonas van den Brink \\[-0.4cm] \texttt{j.v.d.brink@fys.uio.no}}
\title{INF5620 --- Project 2 \\ 2D Wave Equation}


\begin{document}
\maketitle

\vspace{1cm}

\section*{Description}

\clearpage

\section*{Partial Differential Equation}

The PDE we will be solving has the following form,
$$\frac{\p^2 u}{\p t^2} + b\frac{\p u}{\p t} = \frac{\p}{\p x}\bigg(q(x,y) \frac{\p u}{\p x}\bigg) + \frac{\p}{\p y}\bigg(q(x,y)\frac{\p u}{\p y} \bigg) + f(x,y,t).$$
This is a two-dimensional, standard, linear wave equation, with damping. Here $q(x,y) = c^2$ is the wave velocity, which is generally a field. The constant $b$, is a damping factor, and $f(x,y,t)$ is a source term that will be used to verify our solver.

We solve the equation on the spatial domain $\Omega = [0,L_x] \times [0,L_y]$, with a Neumann boundary condition
$$\frac{\p u}{\p n} = 0 \mbox{ on } \delta\Omega,$$
here $\p/\p n$ denotes the directional derivative out of the domain at the boundary.

Our PDE also has the initial conditions
$$u(x,y,0) = I(x,y), \qquad u_t(x,y,0) = V(x,y).$$

\subsection*{Discretizing the PDE}
We discretize both the temporal domain $[0,T]$, and both spatial dimensions, using uniform meshes. This means we define mesh points
\begin{align*}
x_i &= i\Delta x, \mbox{ for } i=0,\ldots,N_x, \\
y_j &= j\Delta y, \mbox{ for } j=0,\ldots,N_y, \\
t_n &= n\Delta t, \mbox{ for } n=0,\ldots,N_t.
\end{align*}
We now evaluate our PDE in the point $(x_i, y_j, t_n)$ and introduce the shorthand notation
$$u_{i,j}^n \equiv u(x_i, y_j, t_n).$$
We will use central difference approximations for the time derivatives, meaning we have
$$\bigg[\frac{\p u}{\p t}\bigg]^n \approx \frac{u^{n+1} - 2u^n + u^{n-1}}{\Delta t^2} = \bigg[\D_t\D_t u\bigg]^n,$$
and
$$b\frac{\p u}{\p t} \approx b \frac{u^{n+1}-u^{n-1}}{2\Delta t} = \bigg[\D_{2t}u\bigg]^n.$$
For the spatial derivatives, we first approximate the outer derivative using a central difference, we first introduce $\phi \equiv q \p u/\p x$, and find
$$\frac{\p \phi}{\p x} \approx \frac{\phi_{i+\frac{1}{2}} - \phi_{i-\frac{1}{2}}}{\Delta x} = [\D_x \phi]_{i}.$$
where we approximate $\phi_{i+\frac{1}{2}}$ and $\phi_{i-\frac{1}{2}}$, using a central difference yet again
$$\phi_{i+1} = q_{i+\frac{1}{2}}\bigg[\frac{\p \phi}{\p x}\bigg]_{i+\frac{1}{2}} \approx q_{i+\frac{1}{2}} \frac{u_{i+1} - u_{i}}{\Delta x} = [q\D_x u]_{i+\frac{1}{2}}.$$
$$\phi_{i-1} = q_{i-\frac{1}{2}}\bigg[\frac{\p \phi}{\p x}\bigg]_{i-\frac{1}{2}} \approx q_{i-\frac{1}{2}} \frac{u_{i} - u_{i-1}}{\Delta x} = [q\D_x u]_{i-\frac{1}{2}}.$$
If we have access to a continous $q$, evaluating $q$ in $x_{i+\frac{1}{2}}$ is no problem, but we would also like to be able to use a discretized $q$ known only in the mesh points, so we approximate $q_{i+\frac{1}{2}}$ using an arithmetic mean
$$q_{i+\frac{1}{2}} \approx \frac{q_{i+1} + q_i}{2}, \qquad q_{i-\frac{1}{2}} \approx \frac{q_{i} + q_{i-1}}{2}.$$
Inserting this, we have
$$\bigg[\frac{\p}{\p x}\bigg(q\frac{\p u}{\p x}\bigg)\bigg]_i \approx \frac{1}{2\Delta x^2}\bigg[\big(q_{i+1}+q_i\big)\big(u_{i+1}-u_i\big) + \big(q_{i-1} + q_i\big)\big(u_{i-1}-u_i\big)\bigg].$$
And we just the exact same approximation for the other spatial derivative.

Our discrete equation then becomes
$$[\D_t\D_t u + b\D_{2t}u = \D_x \overline{q}^{x}\D_x u + \D_y \overline{q}^y \D_y u + f]^{n}_{i,j}.$$
Which written out and solved for $u_{i,j}^{n+1}$ gives the following numerical scheme
\begin{align*}
u_{i,j}^{n+1} &= \bigg(\frac{2}{2+b\Delta t}\bigg)\Bigg[2u_{i,j}^n - \bigg(1-\frac{b\Delta t}{2}\bigg)u_{i,j}^{n-1} \\ 
&\qquad + \frac{h_x}{2}\bigg(\big(q_{i+1,j}+q_{i,j}\big)\big(u_{i+1,j}^n-u_{i,j}^n\big) + \big(q_{i-1,j} + q_{i,j}\big)\big(u_{i-1,j}^n-u_{i,j}^n\big)\bigg) \\
&\qquad + \frac{h_y}{2}\bigg(\big(q_{i,j+1}+q_{i,j}\big)\big(u_{i,j+1}^n-u_{i,j}^n\big) + \big(q_{i,j-1} + q_{i,j}\big)\big(u_{i,j-1}^n-u_{i,j}^n\big)\bigg) \\
&\qquad + \Delta t^2 f(x_i, y_j, t_n) \bigg],
\end{align*}
where $h_x = \Delta t^2/\Delta x^2$.

\subsection*{Verifying the solver using constant solution}
As a test case, we try implementing a constant solution
$$u_e = C = {\rm const.},$$
by inserting this solution into our discrete equation, we see that the source term vanishes
$$f(x,y,t) = 0.$$
We implement the test case as a nose test and verify that it succeeds.

\subsection*{Veryfing the solver using a seperable solution}
We will verify our solver by attempting to reproduce a seperable exact solution
$$u_e(x,y,t) = X(x)Y(y)T(t),$$
where $X$, $Y$ are cubic polynomials and $T$ is quadratic. To satisfy our Neumann boundary conditions, we will have to construct $X$ and $Y$ so that they vanish on the boundaries, so
$$u_e(x,y,t) = 0 \mbox{ on } \delta\Omega, \qquad X(0)=X(L_x)=Y(0)=Y(L_y)=0.$$
For ease of implementation, we won't treat the polynomials as completely general. We let $T(t)=0$ so that $I(x,y)=0$. We then have
\begin{align*}
X(x) &= A x^3 - \frac{3}{2}Ax^2 + C_x, \\
Y(y) &= B y^3 - \frac{3}{2}By^2 + C_y, \\
T(t) &= D t^2,
\end{align*}
where $A$, $B$, $C_x$, $C_y$ and $D$ are all real constants. To fit our source term to the exact solution, we insert it into our discrete equation.
$$[\D_t\D_t u_e + b\D_{2t}u_e = \D_x \overline{q}^{x}\D_x u + \D_y \overline{q}^y \D_y u + f]^{n}_{i,j}.$$
In our verification we will ignore damping ($b=0$) and we will let the wave velocity be constant, $q(x,y)=\mbox{const.}$, so the equation simplifies 
$$[X\cdot Y\cdot \D_t\D_t T = q\cdot  Y\cdot T\cdot  \D_x \D_x X + q\cdot  X\cdot T\cdot  \D_y \D_y Y + f]^{n}_{i,j}.$$
This is our discrete equation for all internal mesh points, for the points next to the boundaries, the discrete equation will look slightly different, which we will discuss shortly. As all finite differences in the discrete equation are 2.\ order we know that they exactly reproduce the derivative of a third degree polynomial (this can be shown from simple insertion), so we have
\begin{align*}
\D_t \D_t T(t) &= \D_t \D_t Dt^2 = 2D, \\
\D_x \D_x X(x) &= \D_x \D_x A x^3 - \frac{3}{2}Ax^2 + C_x = 6Ax - 3A, \\  
\D_y \D_y Y(y) &= \D_y \D_y B y^3 - \frac{3}{2}By^2 + C_y = 6By - 3B, \\  
\end{align*}
So when we write out the discrete equation we have
$$X_i \cdot Y_j \cdot 2D = q Y_j \cdot T_n \cdot(6Ax_i - 3A) + qX_i\cdot T_n \cdot(6By_i - 3B) + f_{i,j}^n.$$
So the fitted source term is
$$f_{i,j}^n = 2D\cdot X_i\cdot Y_j - q Y_j \cdot T_n \cdot(6Ax_i - 3A) + qX_i\cdot T_n \cdot(6By_i - 3B).$$
If we use this source term, the discrete equation is solved exactly, and the solver should reproduce the exact separable solution. This is the case for the interal mesh points, let us now look closer at the points at the boundary of our domain.

\subsubsection*{Source term at the boundary}

Due to our Neumann condition, $\p u/\p n = 0$ on $\delta \Omega$, the discrete equation we are solving on the boundary is slightly different than the discrete equation for the internal mesh points. For the internal mesh points we had
$$[\D_t\D_t u = q \D_x \D_x u + q \D_y \D_y u + f]^{n}_{i,j}.$$
Where the spatial derivatives are the 2.\ order central differences
$$\D_x \D_x u = \frac{u_{i+1} - 2u_i + u_{i-1}}{\Delta x^2},$$
however, at the boundary $x = 0$, we have $i=0$, meaning we need to know the value outside the mesh $u_{-1}$.

here, the spatial derivatives 
\begin{align*}
u_{i,j}^{n+1} &= \bigg(\frac{2}{2+b\Delta t}\bigg)\Bigg[2u_{i,j}^n - \bigg(1-\frac{b\Delta t}{2}\bigg)u_{i,j}^{n-1} \\ 
&\qquad + \frac{h_x}{2}\bigg(\big(q_{i+1,j}+q_{i,j}\big)\big(u_{i+1,j}^n-u_{i,j}^n\big) + \big(q_{i-1,j} + q_{i,j}\big)\big(u_{i-1,j}^n-u_{i,j}^n\big)\bigg) \\
&\qquad + \frac{h_y}{2}\bigg(\big(q_{i,j+1}+q_{i,j}\big)\big(u_{i,j+1}^n-u_{i,j}^n\big) + \big(q_{i,j-1} + q_{i,j}\big)\big(u_{i,j-1}^n-u_{i,j}^n\big)\bigg) \\
&\qquad + \Delta t^2 f(x_i, y_j, t_n) \bigg],
\end{align*}




\end{document}

