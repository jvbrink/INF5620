\documentclass[a4paper, 11pt, notitlepage, english]{article}

\usepackage{babel}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc, url}
\usepackage{textcomp}
\usepackage{amsmath, amssymb}
\usepackage{amsbsy, amsfonts}
\usepackage{graphicx, color}
\usepackage{parskip}
\usepackage{framed}
\usepackage{amsmath}
\usepackage{xcolor}
\usepackage{multicol}
\usepackage{url}
\usepackage{flafter}


\usepackage{geometry}
\geometry{headheight=0.01mm}
\geometry{top=24mm, bottom=29mm, left=39mm, right=39mm}

\renewcommand{\arraystretch}{2}
\setlength{\tabcolsep}{10pt}
\makeatletter
\renewcommand*\env@matrix[1][*\c@MaxMatrixCols c]{%
  \hskip -\arraycolsep
  \let\@ifnextchar\new@ifnextchar
  \array{#1}}
%
% Parametere for inkludering av kode fra fil
%
\usepackage{listings}
\lstset{language=python}
\lstset{basicstyle=\ttfamily\small}
\lstset{frame=single}
\lstset{keywordstyle=\color{red}\bfseries}
\lstset{commentstyle=\itshape\color{blue}}
\lstset{showspaces=false}
\lstset{showstringspaces=false}
\lstset{showtabs=false}
\lstset{breaklines}

%
% Definering av egne kommandoer og miljøer
%
\newcommand{\dd}[1]{\ \text{d}#1}
\newcommand{\f}[2]{\frac{#1}{#2}} 
\newcommand{\beq}{\begin{equation*}}
\newcommand{\eeq}{\end{equation*}}
\newcommand{\bra}[1]{\langle #1|}
\newcommand{\ket}[1]{|#1 \rangle}
\newcommand{\braket}[2]{\langle #1 | #2 \rangle}
\newcommand{\braup}[1]{\langle #1 \left|\uparrow\rangle\right.}
\newcommand{\bradown}[1]{\langle #1 \left|\downarrow\rangle\right.}
\newcommand{\av}[1]{\left| #1 \right|}
\newcommand{\op}[1]{\hat{#1}}
\newcommand{\braopket}[3]{\langle #1 | {#2} | #3 \rangle}
\newcommand{\ketbra}[2]{\ket{#1}\bra{#2}}
\newcommand{\pp}[1]{\frac{\partial}{\partial #1}}
\newcommand{\ppn}[1]{\frac{\partial^2}{\partial #1^2}}
\newcommand{\up}{\left|\uparrow\rangle\right.}
\newcommand{\upup}{\left|\uparrow\uparrow\rangle\right.}
\newcommand{\down}{\left|\downarrow\rangle\right.}
\newcommand{\downdown}{\left|\downarrow\downarrow\rangle\right.}
\newcommand{\updown}{\left|\uparrow\downarrow\rangle\right.}
\newcommand{\downup}{\left|\downarrow\uparrow\rangle\right.}
\newcommand{\bupup}{\left.\langle\uparrow\uparrow\right|}
\newcommand{\bdowndown}{\left.\langle\downarrow\downarrow\right|}
\newcommand{\bupdown}{\left.\langle\uparrow\downarrow\right|}
\newcommand{\bdownup}{\left.\langle\downarrow\uparrow\right|}
\renewcommand{\d}{{\rm d}}
\newcommand{\Res}[2]{{\rm Res}(#1;#2)}
\newcommand{\To}{\quad\Rightarrow\quad}
\newcommand{\eps}{\epsilon}



\newcommand{\bt}[1]{\boldsymbol{#1}}
\newcommand{\mat}[1]{\textsf{\textbf{#1}}}
\newcommand{\I}{\boldsymbol{\mathcal{I}}}
\newcommand{\p}{\partial}
%
% Navn og tittel
%
\author{Emilie Fjørner \\[-0.4cm] \texttt{e.s.fjorner@fys.uio.no} \\[0.2cm] Jonas van den Brink \\[-0.4cm] \texttt{j.v.d.brink@fys.uio.no}}
\title{INF5620 --- Project 2 \\ 2D Wave Equation}


\begin{document}
\maketitle

\vspace{1cm}

\section*{Description}

\clearpage

\section*{Partial Differential Equation}

The PDE we will be solving has the following form,
$$\frac{\p^2 u}{\p t^2} + b\frac{\p u}{\p t} = \frac{\p}{\p x}\bigg(q(x,y) \frac{\p u}{\p x}\bigg) + \frac{\p}{\p y}\bigg(q(x,y)\frac{\p u}{\p y} \bigg) + f(x,y,t).$$
This is a two-dimensional, standard, linear wave equation, with damping. Here $q(x,y) = c^2$ is the wave velocity, which is generally a field. The constant $b$, is a damping factor, and $f(x,y,t)$ is a source term that will be used to verify our solver.

We solve the equation on the spatial domain $\Omega = [0,L_x] \times [0,L_y]$, with a Neumann boundary condition
$$\frac{\p u}{\p n} = 0,$$
here $\p/\p n$ denotes the directional derivative out of the domain at the boundary.

Our PDE also has the initial conditions
$$u(x,y,0) = I(x,y), \qquad u_t(x,y,0) = V(x,y).$$

\subsection*{Discretizing the PDE}
We discretize both the temporal domain $[0,T]$, and both spatial dimensions, using uniform meshes. This means we define mesh points
\begin{align*}
x_i &= i\Delta x, \mbox{ for } i=0,\ldots,N_x, \\
y_j &= j\Delta y, \mbox{ for } j=0,\ldots,N_y, \\
t_n &= n\Delta t, \mbox{ for } n=0,\ldots,N_t.
\end{align*}
We now evaluate our PDE in the point $(x_i, y_j, t_n)$ and introduce the shorthand notation
$$u_{i,j}^n \equiv u(x_i, y_j, t_n).$$
We will use central difference approximations for the time derivatives, meaning we have
$$\bigg[\frac{\p u}{\p t}\bigg]^n \approx \frac{u^{n+1} - 2u^n + u^{n-1}}{\Delta t^2} = \bigg[D_tD_t u\bigg]^n,$$
and
$$b\frac{\p u}{\p t} \approx b \frac{u^{n+1}-u^{n-1}}{2\Delta t} = \bigg[D_{2t}u\bigg]^n.$$
For the spatial derivatives, we first approximate the outer derivative using a central difference, we first introduce $\phi \equiv q \p u/\p x$, and find
$$\frac{\p \phi}{\p x} \approx \frac{\phi_{i+\frac{1}{2}} - \phi_{i-\frac{1}{2}}}{\Delta x} = [D_x \phi]_{i}.$$
where we approximate $\phi_{i+\frac{1}{2}}$ and $\phi_{i-\frac{1}{2}}$, using a central difference yet again
$$\phi_{i+1} = q_{i+\frac{1}{2}}\bigg[\frac{\p \phi}{\p x}\bigg]_{i+\frac{1}{2}} \approx q_{i+\frac{1}{2}} \frac{u_{i+1} - u_{i}}{\Delta x} = [qD_x u]_{i+\frac{1}{2}}.$$
$$\phi_{i-1} = q_{i-\frac{1}{2}}\bigg[\frac{\p \phi}{\p x}\bigg]_{i-\frac{1}{2}} \approx q_{i-\frac{1}{2}} \frac{u_{i} - u_{i-1}}{\Delta x} = [qD_x u]_{i-\frac{1}{2}}.$$
If we have access to a continous $q$, evaluating $q$ in $x_{i+\frac{1}{2}}$ is no problem, but we would also like to be able to use a discretized $q$ known only in the mesh points, so we approximate $q_{i+\frac{1}{2}}$ using an arithmetic mean
$$q_{i+\frac{1}{2}} \approx \frac{q_{i+1} + q_i}{2}, \qquad q_{i-\frac{1}{2}} \approx \frac{q_{i} + q_{i-1}}{2}.$$
Inserting this, we have
$$\bigg[\frac{\p}{\p x}\bigg(q\frac{\p u}{\p x}\bigg)\bigg]_i \approx \frac{1}{2\Delta x^2}\bigg[\big(q_{i+1}+q_i\big)\big(u_{i+1}-u_i\big) + \big(q_{i-1} + q_i\big)\big(u_{i-1}-u_i\big)\bigg].$$
And we just the exact same approximation for the other spatial derivative.

Our discrete equation then becomes
$$[D_tD_t u + bD_{2t}u = D_x \overline{q}^{x}D_x u + D_y \overline{q}^y D_y u + f]^{n}_{i,j}.$$
Which written out and solved for $u_{i,j}^{n+1}$ gives the following numerical scheme
\begin{align*}
u_{i,j}^{n+1} &= \bigg(\frac{2}{2+b\Delta t}\bigg)\Bigg[2u_{i,j}^n - \bigg(1-\frac{b\Delta t}{2}\bigg)u_{i,j}^{n-1} \\ 
&\qquad + \frac{h_x}{2}\bigg(\big(q_{i+1,j}+q_{i,j}\big)\big(u_{i+1,j}^n-u_{i,j}^n\big) + \big(q_{i-1,j} + q_{i,j}\big)\big(u_{i-1,j}^n-u_{i,j}^n\big)\bigg) \\
&\qquad + \frac{h_y}{2}\bigg(\big(q_{i,j+1}+q_{i,j}\big)\big(u_{i,j+1}^n-u_{i,j}^n\big) + \big(q_{i,j-1} + q_{i,j}\big)\big(u_{i,j-1}^n-u_{i,j}^n\big)\bigg) \\
&\qquad + \Delta t^2 f(x_i, y_j, t_n) \bigg],
\end{align*}
where $h_x = \Delta t^2/\Delta x^2$.

\subsection*{Testing the solver using constant solution}
We can implement a test for the solver by fitting the source term to an exact solution
$$u_e(x,y,t) = ax^2 + by^2 + c.$$
Inserting this into our discrete equation gives
$$[D_tD_t u_e + bD_{2t}u_e = D_x \overline{q}^{x}D_x u_e + D_y \overline{q}^y D_y u_e + f]^{n}_{i,j}.$$
The central difference is able to exactly derivate a 2.\ order-polynomial so we have
$$f^n_{i,j} = -q(a+b)



\end{document}

